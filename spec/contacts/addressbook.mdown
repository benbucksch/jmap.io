# AddressBooks

An AddressBook is a named collection of Cards and CardGroups. All Cards and CardGroups are associated with exactly one AddressBook.

A **AddressBook** object has the following properties:

- **id**: `Id` (immutable; server-set)
  The id of the AddressBook.
- **name**: `String`
  The user-visible name of the AddressBook. This may be any UTF-8 string of at least 1 character in length and maximum 255 octets in size.
- **isSubscribed**: `Boolean`
  Has the user indicated they wish to see this AddressBook in their client? This SHOULD default to false for AddressBooks in shared accounts the user has access to and true for any new AddressBooks created by the user themself.

    If false, the AddressBook and its contents should only be displayed when
    the user explicitly requests it or to offer it for the user to subscribe to.
- **shareWith**: `Id[AddressBookRights]|null` (default: null)
  A map of Principal id to rights for principals this AddressBook is shared with. The principal to which this AddressBook belongs MUST NOT be in this set. This is null if the AddressBook is not shared with anyone. May be modified only if the user has the mayAdmin right. The account id for the principals may be found in the `urn:ietf:params:jmap:principals:owner` capability of the Account to which the AddressBook belongs.
- **myRights**: `AddressBookRights` (server-set)
  The set of access rights the user has in relation to this AddressBook.

An **AddressBookRights** object has the following properties:

- **mayRead**: `Boolean`
  The user may fetch the Cards and CardGroups in this AddressBook.
- **mayWrite**: `Boolean`
  The user may create, modify or destroy all Cards and CardGroups in this AddressBook, or move them to or from this AddressBook.
- **mayAdmin**: `Boolean`
  The user may modify sharing for this AddressBook.
- **mayDelete**: `Boolean` (server-set)
  The user may delete the AddressBook itself. This property MUST be false if the account to which this AddressBook belongs has the *isReadOnly* property set to true.


## AddressBook/get

This is a standard "/get" method as described in [@!RFC8620], Section 5.1. The *ids* argument may be `null` to fetch all at once.

## AddressBook/changes

This is a standard "/changes" method as described in [@!RFC8620], Section 5.2.

## AddressBook/set

This is a standard "/set" method as described in [@!RFC8620], Section 5.3 but with the following additional request argument:

- **onDestroyRemoveContents**: `Boolean` (default: false)
  If false, any attempt to destroy an AddressBook that still has a Card or CardGroup in it will be rejected with a `addressBookHasContents` SetError. If true, any Cards or CardGroups that were in the AddressBook will be destroyed.

The "shareWith" property may only be set by users that have the mayAdmin right.
When modifying the shareWith property, the user cannot give a right to a principal if the principal did not already have that right and the user making the change also does not have that right. Any attempt to do so must be rejected with a `forbidden` SetError.

Users can subscribe or unsubscribe to an AddressBook by setting the "isSubscribed" property. The server MAY forbid users from subscribing to certain AddressBooks even though they have permission to see them, rejecting the update with a `forbidden` SetError.

The following extra SetError types are defined:

For "destroy":

- **addressBookHasContents**: The AddressBook has at least one Card or
  CardGroup assigned to it, and the "onDestroyRemoveContents" argument was false.
