# AddressBooks

An AddressBook is a named collection of ContactCards. All ContactCards are associated with one or more AddressBook.

A **AddressBook** object has the following properties:

- **id**: `Id` (immutable; server-set)
  The id of the AddressBook.
- **name**: `String`
  The user-visible name of the AddressBook. This may be any UTF-8 string of at least 1 character in length and maximum 255 octets in size.
- **description**: `String|null` (default: null)
  An optional longer-form description of the AddressBook, to provide context in shared environments where users need more than just the name.
- **sortOrder**: `UnsignedInt` (default: 0)
  Defines the sort order of AddressBooks when presented in the client's UI, so
  it is consistent between devices. The number MUST be an integer in the range
  0 <= sortOrder < 2^31.

    An AddressBook with a lower order should be displayed before a AddressBook
    with a higher order in any list of AddressBooks in the client's UI. AddressBooks with equal order SHOULD be sorted in alphabetical order by name.  The sorting should take into account locale-specific character order convention.
- **isDefault**: `Boolean` (server-set)
  This SHOULD be true for exactly one AddressBook in any account, and MUST NOT
  be true for more than one AddressBook within an account. The default
  AddressBook should be used by clients whenever they need to choose an
  AddressBook for the user within this account, and they do not have any other
  information on which to make a choice. For example, if the user creates a new
  contact card, the client may automatically set the card as belonging to the
  default AddressBook from the user's primary account.
- **isSubscribed**: `Boolean`
  Has the user indicated they wish to see this AddressBook in their client? This SHOULD default to false for AddressBooks in shared accounts the user has access to and true for any new AddressBooks created by the user themself.

    If false, the AddressBook and its contents should only be displayed when
    the user explicitly requests it or to offer it for the user to subscribe to.
- **shareWith**: `Id[AddressBookRights]|null` (default: null)
  A map of Principal id to rights for principals this AddressBook is shared with. The principal to which this AddressBook belongs MUST NOT be in this set. This is null if the AddressBook is not shared with anyone. May be modified only if the user has the mayAdmin right. The account id for the principals may be found in the `urn:ietf:params:jmap:principals:owner` capability of the Account to which the AddressBook belongs.
- **myRights**: `AddressBookRights` (server-set)
  The set of access rights the user has in relation to this AddressBook.

An **AddressBookRights** object has the following properties:

- **mayRead**: `Boolean`
  The user may fetch the ContactCards in this AddressBook.
- **mayWrite**: `Boolean`
  The user may create, modify or destroy all ContactCards in this AddressBook, or move them to or from this AddressBook.
- **mayAdmin**: `Boolean`
  The user may modify sharing for this AddressBook.
- **mayDelete**: `Boolean`
  The user may delete the AddressBook itself.


## AddressBook/get

This is a standard "/get" method as described in [@!RFC8620], Section 5.1. The *ids* argument may be `null` to fetch all at once.

## AddressBook/changes

This is a standard "/changes" method as described in [@!RFC8620], Section 5.2.

## AddressBook/set

This is a standard "/set" method as described in [@!RFC8620], Section 5.3 but with the following additional request argument:

- **onDestroyRemoveContents**: `Boolean` (default: false)
  If false, any attempt to destroy an AddressBook that still has ContactCard
  in it will be rejected with an `addressBookHasContents` SetError. If
  true, any ContactCards that were in the AddressBook will be removed from it, and if in no other AddressBooks they will be destroyed.

- **onSuccessSetIsDefault**: `Id|null`
  If an id is given, and all creates, updates and destroys (if any) succeed
  without error, the server will try to set this AddressBook as the default.
  (For references to AddressBook creations, this is equivalent to a
  creation-reference, so the id will be the creation id prefixed with a "#".)

  If the id is not found, or the change is not permitted by the server for
  policy reasons, it MUST be ignored and the currently default AddressBook (if
  any) will remain as such. No error is returned to the client in this case.

  As per [@!RFC8620], Section 5.3, if the default is successfully changed, any
  changed objects MUST be reported in either the "created" or "updated"
  argument in the response as  appropriate, with the server-set value included.

The "shareWith" property may only be set by users that have the mayAdmin right.
When modifying the shareWith property, the user cannot give a right to a principal if the principal did not already have that right and the user making the change also does not have that right. Any attempt to do so must be rejected with a `forbidden` SetError.

Users can subscribe or unsubscribe to an AddressBook by setting the "isSubscribed" property. The server MAY forbid users from subscribing to certain AddressBooks even though they have permission to see them, rejecting the update with a `forbidden` SetError.

The following extra SetError types are defined:

For "destroy":

- **addressBookHasContents**: The AddressBook has at least one ContactCard
  assigned to it, and the "onDestroyRemoveContents" argument was false.
